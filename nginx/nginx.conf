# Limita a apenas 1 processo worker (essencial para evitar duplicação no Heroku)
worker_processes 1;

events {
  worker_connections 1024;
}

http {
  include       mime.types;
  default_type  application/octet-stream;
  sendfile        on;
  keepalive_timeout  65;

  resolver 8.8.8.8 8.8.4.4 valid=300s;
  proxy_connect_timeout 300s;
  proxy_send_timeout 300s;
  proxy_read_timeout 300s;

  # Corrige problemas de header grande
  proxy_buffer_size          128k;
  proxy_buffers              4 256k;
  proxy_busy_buffers_size    256k;

  access_log /dev/stdout;
  error_log /dev/stderr debug;

  # Garante que add_header funcione com qualquer código de status
  map $http_origin $cors_origin {
      default "*";
  }


  add_header Access-Control-Allow-Origin $cors_origin always;
     add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
     add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
     add_header Access-Control-Expose-Headers "Content-Length,Content-Range" always;


  server {
    listen ${PORT};

    location /usuarios {
      if ($request_method = OPTIONS) {
      add_header Access-Control-Allow-Origin "https://meupet-frontend-web.vercel.app" always;
      add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
      add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
      add_header Access-Control-Expose-Headers "Content-Length,Content-Range" always;
      add_header Access-Control-Max-Age 1728000;
      return 204;
      }

      resolver 8.8.8.8;


      proxy_pass https://meupet-users-api-prod-7138bdbc415a.herokuapp.com;
      proxy_set_header Host meupet-users-api-prod-7138bdbc415a.herokuapp.com;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_ssl_server_name on;
      proxy_ssl_verify off;
      proxy_redirect off;
      proxy_http_version 1.1;
      proxy_set_header Connection '';
      chunked_transfer_encoding off;

      add_header Access-Control-Allow-Origin $cors_origin always;
      add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
      add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
      add_header Access-Control-Expose-Headers "Content-Length,Content-Range" always;


    }

    location /animais {
     if ($request_method = OPTIONS) {
        add_header Access-Control-Allow-Origin "https://meupet-frontend-web.vercel.app" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
        add_header Access-Control-Expose-Headers "Content-Length,Content-Range" always;
        add_header Access-Control-Max-Age 1728000;
        return 204;
     }

      resolver 8.8.8.8;

      proxy_pass https://meupet-animals-api-prod-d989fce37073.herokuapp.com;
      proxy_set_header Host meupet-animals-api-prod-d989fce37073.herokuapp.com;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_ssl_server_name on;
      proxy_ssl_verify off;
      proxy_redirect off;
      proxy_http_version 1.1;
      proxy_set_header Connection '';
      chunked_transfer_encoding off;

      add_header Access-Control-Allow-Origin $cors_origin always;
      add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
      add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
      add_header Access-Control-Expose-Headers "Content-Length,Content-Range" always;

    }

    location / {
      return 404 "Not Found";
    }
  }
}
