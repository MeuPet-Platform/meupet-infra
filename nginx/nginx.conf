events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;

    # O Heroku já tem seu próprio resolvedor DNS.
    # Usar resolvedores públicos como 8.8.8.8 é comum.
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # Habilita CORS globalmente para o gateway (ESTAS SÃO AS CORRETAS E ÚNICAS)
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
    add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

    # REMOVA AS DIRETIVAS 'set' AQUI! ELAS ESTAVAM CAUSANDO O ERRO.
    # set $users_api_url "http://meupet-users-api-prod.herokuapp.com";
    # set $animals_api_url "http://meupet-animals-api-prod.herokuapp.com";

    server {
        listen $PORT; # Heroku injeta a porta para o dyno via variável de ambiente $PORT

        # Resposta para preflight OPTIONS requests (CORS)
        if ($request_method = OPTIONS) {
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        # Rota para o serviço de usuários
        location /usuarios {
            # Use as variáveis de ambiente do Heroku diretamente.
            # O 'envsubst' no docker-entrypoint.sh vai substituí-las.
            proxy_pass https://${USERS_API_URL};
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_ssl_server_name on;
            proxy_ssl_verify off;
        }

        # Rota para o serviço de animais
        location /animais {
            proxy_pass https://${ANIMALS_API_URL};
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_ssl_server_name on;
            proxy_ssl_verify off;
        }

        location / {
            return 404 "Not Found";
        }
    }
}