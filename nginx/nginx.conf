events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;

    # Usar resolvedores DNS públicos para resolver nomes de domínios Heroku (.herokuapp.com)
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # Habilita CORS globalmente para o gateway
    # Estas diretivas add_header são para as respostas REAIS (GET, POST, etc.)
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
    add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

    server {
        listen $PORT; # Heroku injeta a porta para o dyno via variável de ambiente $PORT

        # REMOVA AQUI O BLOCO 'if ($request_method = OPTIONS) { ... }'
        # Ele será colocado dentro de cada location específico.

        # Rota para o serviço de usuários
        location /usuarios {
            # Bloco IF para requisições OPTIONS (preflight CORS)
            if ($request_method = OPTIONS) {
                # Estas headers são específicas para o preflight OPTIONS e devem ficar aqui.
                # Não repita as headers Allow-Origin, Methods, etc. se já estiverem no bloco http.
                # Apenas as que são específicas para o preflight (Max-Age, Content-Type, Content-Length)
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204; # Retorna 204 para preflight OK
            }

            # Para requisições REAIS (GET, POST, etc.)
            proxy_pass https://${USERS_API_URL};
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_ssl_server_name on;
            proxy_ssl_verify off; # Desabilita verificação de certificado (para desenvolvimento/faculdade)
        }

        # Rota para o serviço de animais
        location /animais {
            # Bloco IF para requisições OPTIONS (preflight CORS)
            if ($request_method = OPTIONS) {
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204; # Retorna 204 para preflight OK
            }

            # Para requisições REAIS (GET, POST, etc.)
            proxy_pass https://${ANIMALS_API_URL};
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_ssl_server_name on;
            proxy_ssl_verify off;
        }

        # Catch-all para outras requisições não mapeadas
        location / {
            return 404 "Not Found";
        }
    }
}